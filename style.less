@import url('./UserSettings.style.css');

.sttc--root {
	position: absolute;
	bottom: calc(100% - 16px);
	right: 3.5em;
	// left: 3.5em;
	// height: 0;
	display: flex;
	flex-direction: row;
	// justify-content: end;
	align-items: end;
	z-index: -1;
	// opacity: 0.5;
	transition: 400ms;
	overflow: hidden;
	pointer-events: none;
	max-width: calc(100% - 7em);
	mask: linear-gradient(90deg, transparent 0%, black 3%, black 97%, transparent 100%);
	&:hover {
		> .sttc--wrapper {
			opacity: 1;
		}
	}

	> .sttc--wrapper {
		transform: translateY(50%);
		transition: 400ms;
		opacity: 0.5;
		&.sttc--absent > .sttc--img {
			filter: grayscale(1);
		}
		&.sttc--chatty {
			opacity: 1;
		}
		&:hover, &.sttc--hover {
			transform: translateY(10%);
		}
	}
}

.sttc--wrapper {
	height: 140px;
	filter: drop-shadow(0 0 6px rgba(0 0 0 / 0.5));
	cursor: pointer;
	> .sttc--img {
		height: 100%;
		object-fit: contain;
		object-position: top;
		pointer-events: all;
		transition: 400ms;
	}
}

.sttc--blocker {
	position: fixed;
	inset: 0;
	z-index: 40000;
	background-color: rgb(0 0 0 / 0.5);
	> .sttc--wrapper {
		position: absolute;
		z-index: 1;
	}
	> .sttc--content {
		backdrop-filter: blur(10px);
		position: absolute;
		top: 2em;
		left: 2em;
		right: 2em;
		// outline: 2px solid red;
		overflow: auto;
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		gap: 1em;
		> .sttc--costume {
			display: flex;
			flex-direction: column;
			height: 100%;
			cursor: pointer;
			transition: 200ms;
			scale: 0.9;
			&:hover {
				scale: 1;
			}
			animation-duration: 0.5s;
			animation-name: sttc--enter;
			animation-delay: 0.1s;
			animation-fill-mode: backwards;
			animation-timing-function: cubic-bezier(.26, .53, .74, 1.48);
			.generate-delay(25);
			&:nth-child(25) ~ .sttc--costume {
				animation-delay: 2.7s;
			}
			> img {
				flex: 1 1 auto;
				height: calc(100% - 1lh);
			}
			> .sttc--label {
				flex: 0 0 1lh;
				height: 1lh;
				overflow: hidden;
				white-space: nowrap;
				text-overflow: ellipsis;
				text-align: center;
			}
		}
	}
}

.generate-delay(@n, @i: 1) when (@i <= @n) {
	&:nth-child(@{i}) {
		animation-delay: (0.1s + 0.1s * @i);
	}
	.generate-delay(@n, (@i + 1));
}
@keyframes sttc--enter {
	0% {
		opacity: 0;
		scale: 0.5;
	}
	// 70% {
	// 	scale: 1;
	// }
	100% {
		opacity: 1;
		scale: 0.9;
	}
}


